{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///Users/mahautlatinis/Desktop/portfolio/app/api/medium-rss/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\nimport { parseStringPromise } from 'xml2js';\n\nfunction extractPlainText(input: string, maxLength: number = 50): string {\n  // Retirer toutes les balises HTML\n  const plainText = input.replace(/<\\/?[^>]+(>|$)/g, \"\");\n\n  // Garder les premiers `maxLength` caractères\n  return plainText.substring(0, maxLength);\n}\n\nexport async function GET() {\n  const mediumRSS = 'https://medium.com/feed/@mahautlatinis'; // Remplacez par votre nom d'utilisateur Medium\n\n  const lastPublication = 'https://medium.com/feed/la-nouvelle-version-de-css-en-2024-une-révolution-a910ff5f3161'\n\n  try {\n    // Récupérer le flux RSS\n    const response = await fetch(mediumRSS, {\n      headers: {\n        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n    }\n    const xmlData = await response.text();\n\n    // Convertir le flux RSS en JSON\n    const rssJson = await parseStringPromise(xmlData);\n    //console.log('Structure du RSS JSON :', JSON.stringify(rssJson, null, 2));\n\n \n    // Extraire les articles\n    const items = rssJson.rss.channel[0].item.map((item: any) => ({\n      title: item.title[0],\n      link: item.link[0],\n      description: item[\"content:encoded\"] ? extractPlainText(item[\"content:encoded\"][0]) : \"Description indisponible\",\n      pubDate: item.pubDate[0],\n      category: item.category\n    }));\n\n    return NextResponse.json(items);\n  } catch (error) {\n    console.error('Erreur lors de la récupération du flux RSS Medium :', error);\n    return NextResponse.json({ error: 'Impossible de récupérer le flux RSS.' }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,SAAS,iBAAiB,KAAa,EAAE,YAAoB,EAAE;IAC7D,kCAAkC;IAClC,MAAM,YAAY,MAAM,OAAO,CAAC,mBAAmB;IAEnD,6CAA6C;IAC7C,OAAO,UAAU,SAAS,CAAC,GAAG;AAChC;AAEO,eAAe;IACpB,MAAM,YAAY,0CAA0C,+CAA+C;IAE3G,MAAM,kBAAkB;IAExB,IAAI;QACF,wBAAwB;QACxB,MAAM,WAAW,MAAM,MAAM,WAAW;YACtC,SAAS;gBACP,cAAc;YAChB;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,SAAS,MAAM,EAAE;QAC1D;QACA,MAAM,UAAU,MAAM,SAAS,IAAI;QAEnC,gCAAgC;QAChC,MAAM,UAAU,MAAM,CAAA,GAAA,yIAAA,CAAA,qBAAkB,AAAD,EAAE;QACzC,2EAA2E;QAG3E,wBAAwB;QACxB,MAAM,QAAQ,QAAQ,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAc,CAAC;gBAC5D,OAAO,KAAK,KAAK,CAAC,EAAE;gBACpB,MAAM,KAAK,IAAI,CAAC,EAAE;gBAClB,aAAa,IAAI,CAAC,kBAAkB,GAAG,iBAAiB,IAAI,CAAC,kBAAkB,CAAC,EAAE,IAAI;gBACtF,SAAS,KAAK,OAAO,CAAC,EAAE;gBACxB,UAAU,KAAK,QAAQ;YACzB,CAAC;QAED,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uDAAuD;QACrE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuC,GAAG;YAAE,QAAQ;QAAI;IAC5F;AACF"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}